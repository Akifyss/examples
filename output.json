[
  {
    "name": "番茄钟",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E7%95%AA%E8%8C%84%E9%92%9F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>番茄时钟</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 500px;\n            --uiHeight: 400px;\n        }\n    </style>\n</head>\n\n<body class=\"flex items-center justify-center h-screen\">\n    <div id=\"timer-container\" class=\"shadow-lg rounded-lg p-5 bg-white flex flex-col items-center justify-center\" style=\"width: var(--uiWidth); height: var(--uiHeight);\">\n        <div id=\"display-container\" class=\"flex flex-col items-center justify-center\" style=\"width: var(--uiWidth); height: var(--uiHeight); position: relative;\">\n            <iconify-icon icon=\"twemoji:tomato\" style=\"font-size: 16rem; position: absolute;\"></iconify-icon>\n            <div id=\"time-display\" class=\"text-5xl font-bold text-neutral-100\" style=\"position: relative;\">25:00</div>\n            <div id=\"status-message\" class=\"text-sm text-neutral-100\" style=\"position: relative;\">工作计时</div>\n            <div id=\"settings-container\" class=\"hidden\" style=\"position: relative;\">\n                <label for=\"work-time\" class=\"text-sm text-neutral-100 block\">工作时间(min):</label>\n                <input id=\"work-time\" type=\"number\" value=\"25\" class=\"border rounded py-1 px-2 text-black\">\n                <label for=\"break-time\" class=\"text-sm text-neutral-100 block\">休息时间(min):</label>\n                <input id=\"break-time\" type=\"number\" value=\"5\" class=\"border rounded py-1 px-2 text-black\">\n            </div>\n        </div>\n        <div id=\"buttons-container\" class=\"flex space-x-4\">\n            <button id=\"toggle-btn\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\n                <iconify-icon icon=\"mdi:play\"></iconify-icon>\n            </button>\n            <button id=\"reset-btn\" class=\"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\">\n                <iconify-icon icon=\"mdi:restart\"></iconify-icon>\n            </button>\n            <button id=\"settings-btn\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                <iconify-icon icon=\"ic:round-settings\"></iconify-icon>\n            </button>\n        </div>\n    </div>\n\n    <script>\n        let workTime = 25;\n        let breakTime = 5;\n        let isWorkTime = true;\n        let timer = null;\n        let isSettingsVisible = false;\n        let remainingTime = workTime * 60;\n        let isRunning = false;\n\n        const timeDisplay = document.getElementById('time-display');\n        const statusMessage = document.getElementById('status-message');\n        const toggleButton = document.getElementById('toggle-btn');\n        const resetButton = document.getElementById('reset-btn');\n        const settingsButton = document.getElementById('settings-btn');\n        const settingsContainer = document.getElementById('settings-container');\n        const workTimeInput = document.getElementById('work-time');\n        const breakTimeInput = document.getElementById('break-time');\n\n        function updateTimeDisplay(minutes, seconds) {\n            timeDisplay.textContent = minutes.toLocaleString('en-US', {\n                minimumIntegerDigits: 2\n            }) + ':' + seconds.toLocaleString('en-US', {\n                minimumIntegerDigits: 2\n            });\n        }\n\n        function startTimer() {\n            timer = setInterval(() => {\n                if (remainingTime > 0) {\n                    remainingTime--;\n                    let minutes = Math.floor(remainingTime / 60);\n                    let seconds = remainingTime % 60;\n                    updateTimeDisplay(minutes, seconds);\n                } else {\n                    clearInterval(timer);\n                    toggleTimer();\n                }\n            }, 1000);\n        }\n\n        function toggleTimer() {\n            if (isWorkTime) {\n                remainingTime = breakTime * 60;\n                statusMessage.textContent = '休息计时';\n                isWorkTime = false;\n            } else {\n                remainingTime = workTime * 60;\n                statusMessage.textContent = '工作计时';\n                isWorkTime = true;\n            }\n            startTimer();\n        }\n\n        toggleButton.onclick = () => {\n            if (!isRunning) {\n                startTimer();\n                toggleButton.children[0].setAttribute('icon', 'mdi:pause');\n                isRunning = true;\n            } else {\n                clearInterval(timer);\n                toggleButton.children[0].setAttribute('icon', 'mdi:play');\n                isRunning = false;\n            }\n        };\n\n        resetButton.onclick = () => {\n            clearInterval(timer);\n            isRunning = false;\n            remainingTime = workTime * 60;\n            updateTimeDisplay(workTime, 0);\n            statusMessage.textContent = '工作计时';\n            isWorkTime = true;\n            toggleButton.children[0].setAttribute('icon', 'mdi:play');\n        };\n\n        settingsButton.onclick = () => {\n            isSettingsVisible = !isSettingsVisible;\n            settingsContainer.classList.toggle('hidden');\n            timeDisplay.classList.toggle('hidden');\n            statusMessage.classList.toggle('hidden');\n            settingsButton.children[0].setAttribute('icon', isSettingsVisible ? 'ic:baseline-close' : 'ic:round-settings');\n        };\n\n        workTimeInput.onchange = () => {\n            workTime = parseInt(workTimeInput.value);\n            resetButton.onclick();\n        };\n\n        breakTimeInput.onchange = () => {\n            breakTime = parseInt(breakTimeInput.value);\n        };\n    </script>\n</body>\n\n</html>",
    "width": 500,
    "height": 400
  },
  {
    "name": "天气卡片",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E5%A4%A9%E6%B0%94%E5%8D%A1%E7%89%87.png",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>天气预报卡片</title>\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n  <style>\n    :root {\n      --defaultWidth: 350;\n      --defaultHeight: 250;\n      --uiWidth: 100%;\n      --uiHeight: 100%;\n    }\n  </style>\n</head>\n<body class=\"flex items-center justify-center min-h-screen\">\n  <div id=\"weather-card\" class=\"bg-white rounded-lg shadow-lg p-6 w-[var(--uiWidth)] h-[var(--uiHeight)]\">\n    <div id=\"city-and-date\" class=\"flex justify-between items-center\">\n      <h2 id=\"city\" class=\"text-2xl font-bold\">北京</h2>\n      <p id=\"date\" class=\"text-gray-500\">2024年5月16日</p>\n    </div>\n    <div id=\"current-weather\" class=\"mt-6 flex items-center\">\n      <iconify-icon id=\"weather-icon\" icon=\"wi:day-sunny\" class=\"text-yellow-400 text-6xl\"></iconify-icon>\n      <div id=\"temperature-info\" class=\"ml-4\">\n        <p id=\"temperature\" class=\"text-4xl font-bold\">25°C</p>\n        <p id=\"weather-description\" class=\"text-gray-500\">晴</p>\n      </div>\n    </div>\n    <div id=\"forecast\" class=\"mt-6 grid grid-cols-3 gap-4\">\n      <div id=\"day1\" class=\"bg-gray-100 rounded-lg p-2 text-center\">\n        <p class=\"text-xs\">周五</p>\n        <iconify-icon icon=\"wi:day-cloudy\" class=\"text-gray-500 text-2xl mx-auto mt-2\"></iconify-icon>\n        <p class=\"text-lg font-bold mt-2\">23°C</p>\n      </div>\n      <div id=\"day2\" class=\"bg-gray-100 rounded-lg p-2 text-center\">\n        <p class=\"text-xs\">周六</p>\n        <iconify-icon icon=\"wi:rain\" class=\"text-gray-500 text-2xl mx-auto mt-2\"></iconify-icon>\n        <p class=\"text-lg font-bold mt-2\">20°C</p>\n      </div>\n      <div id=\"day3\" class=\"bg-gray-100 rounded-lg p-2 text-center\">\n        <p class=\"text-xs\">周日</p>\n        <iconify-icon icon=\"wi:day-sunny\" class=\"text-yellow-400 text-2xl mx-auto mt-2\"></iconify-icon>\n        <p class=\"text-lg font-bold mt-2\">26°C</p>\n      </div>\n    </div>\n  </div>\n</body>\n</html>",
    "width": 400,
    "height": 300
  },
  {
    "name": "富文本编辑器",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Rich Text Editor</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://cdn.quilljs.com/1.3.6/quill.js\"></script>\n    <link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\">\n</head>\n\n<body>\n\n    <div id=\"editor\" class=\"bg-white\"\n        style=\"width: 100% !important; height: 100% !important; max-width: none !important; min-width: none !important; max-height: none !important; min-height: none !important; position: static;\">\n        <div id=\"toolbar-container\" style=\"position: sticky; top: 0; z-index: 10; background-color: white;\">\n            <span class=\"ql-formats\">\n                <select class=\"ql-font\"></select>\n                <select class=\"ql-size\"></select>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-bold\"></button>\n                <button class=\"ql-italic\"></button>\n                <button class=\"ql-underline\"></button>\n                <button class=\"ql-strike\"></button>\n            </span>\n            <span class=\"ql-formats\">\n                <select class=\"ql-color\"></select>\n                <select class=\"ql-background\"></select>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-script\" value=\"sub\"></button>\n                <button class=\"ql-script\" value=\"super\"></button>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-header\" value=\"1\"></button>\n                <button class=\"ql-header\" value=\"2\"></button>\n                <button class=\"ql-blockquote\"></button>\n                <button class=\"ql-code-block\"></button>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-list\" value=\"ordered\"></button>\n                <button class=\"ql-list\" value=\"bullet\"></button>\n                <button class=\"ql-indent\" value=\"-1\"></button>\n                <button class=\"ql-indent\" value=\"+1\"></button>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-direction\" value=\"rtl\"></button>\n                <select class=\"ql-align\"></select>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-link\"></button>\n                <button class=\"ql-image\"></button>\n                <button class=\"ql-video\"></button>\n            </span>\n            <span class=\"ql-formats\">\n                <button class=\"ql-clean\"></button>\n            </span>\n        </div>\n        <div id=\"editor-container\" style=\"border: none; height: fit-content;\"></div>\n    </div>\n\n    <script>\n        var quill = new Quill('#editor-container', {\n            modules: {\n                toolbar: '#toolbar-container'\n            },\n            placeholder: '输入文本',\n            theme: 'snow'\n        });\n    </script>\n\n</body>\n\n</html>",
    "width": 540,
    "height": 320
  },
  {
    "name": "待办列表",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9%E5%88%97%E8%A1%A8%E7%BB%84%E4%BB%B6.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>待办事项列表组件</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        body {\n            font-family: 'Inter', sans-serif;\n        }\n\n        .input-group {\n            position: relative;\n        }\n\n        .add-btn {\n            position: absolute;\n            right: 0;\n            top: 0;\n            bottom: 0;\n            border: none;\n            background: none;\n            z-index: 10;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 0 12px;\n        }\n\n        .task-input {\n            padding-right: 50px !important;\n        }\n\n        .task-checkbox {\n            cursor: pointer;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .task-checkbox iconify-icon {\n            font-size: 24px;\n            color: #4984ee;\n        }\n\n        .delete-task {\n            cursor: pointer;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .delete-task iconify-icon {\n            font-size: 24px;\n            color: #e24f62;\n        }\n\n        .priority-select {\n            appearance: none;\n            padding-right: 30px !important;\n            background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"black\"><path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /></svg>');\n            background-repeat: no-repeat;\n            background-position: right 10px center;\n            background-size: 16px 16px;\n        }\n    </style>\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div id=\"todoApp\" class=\"flex flex-col items-center p-4\"\n        style=\"width: 100%; height: 100%; margin:0!important; max-width:none!important; min-width:none!important; max-height:none!important; min-height:none!important; position:static!important;\">\n        <div id=\"formSection\" class=\"w-full\">\n            <div class=\"input-group\">\n                <input id=\"taskInput\" type=\"text\" placeholder=\"添加新任务...\"\n                    class=\"task-input w-full p-2 border rounded-t-lg\">\n                <button class=\"add-btn\" id=\"addButton\">\n                    <iconify-icon icon=\"akar-icons:circle-plus-fill\"\n                        style=\"color: #5ec16a; font-size: 24px;\"></iconify-icon>\n                </button>\n            </div>\n            <select id=\"prioritySelect\" class=\"priority-select w-full p-2 border-t-0 border rounded-b-lg\">\n                <option value=\"Low\">低优先级</option>\n                <option value=\"Medium\">中优先级</option>\n                <option value=\"High\">高优先级</option>\n            </select>\n        </div>\n        <ul id=\"taskList\" class=\"w-full mt-4\"></ul>\n    </div>\n\n    <script>\n        const taskInput = document.getElementById('taskInput');\n        const prioritySelect = document.getElementById('prioritySelect');\n        const taskList = document.getElementById('taskList');\n        const addButton = document.getElementById(\"addButton\");\n\n        const initialTasks = [\n            { text: '示例任务', priority: 'Medium', completed: false }\n        ];\n\n        const loadTasks = () => {\n            const tasks = initialTasks; // Load initial tasks on page load\n            tasks.forEach(task => addTask(task.text, task.priority, task.completed));\n        };\n\n        const addTask = (task, priority, completed = false) => {\n            const li = document.createElement('li');\n            li.className = 'flex items-center justify-between p-2 mt-1 border rounded';\n            li.innerHTML = `\n                        <div class=\"flex items-center\">\n                            <button class=\"task-checkbox mr-2\">\n                                <iconify-icon icon=\"${completed ? 'akar-icons:circle-check-fill' : 'akar-icons:circle'}\"></iconify-icon>\n                            </button>\n                            <span class=\"task-content\" contenteditable=\"true\">${task}</span>\n                        </div>\n                        <div class=\"flex items-center\">\n                            <select class=\"task-priority border p-1 rounded\">\n                                <option value=\"Low\" ${priority === 'Low' ? 'selected' : ''}>低</option>\n                                <option value=\"Medium\" ${priority === 'Medium' ? 'selected' : ''}>中</option>\n                                <option value=\"High\" ${priority === 'High' ? 'selected' : ''}>高</option>\n                            </select>\n                            <button class=\"delete-task ml-2\">\n                                <iconify-icon icon=\"akar-icons:circle-x-fill\"></iconify-icon>\n                            </button>\n                        </div>\n                    `;\n\n            taskList.appendChild(li);\n\n            const checkboxButton = li.querySelector('.task-checkbox');\n            checkboxButton.addEventListener('click', () => {\n                const iconify = checkboxButton.querySelector('iconify-icon');\n                const isChecked = iconify.icon === 'akar-icons:circle';\n                iconify.icon = isChecked ? 'akar-icons:circle-check-fill' : 'akar-icons:circle';\n                li.querySelector('.task-content').style.textDecoration = isChecked ? 'line-through' : 'none';\n            });\n\n            const deleteButton = li.querySelector('.delete-task');\n            deleteButton.addEventListener('click', () => {\n                taskList.removeChild(li);\n            });\n        };\n\n        addButton.addEventListener('click', () => {\n            if (taskInput.value.trim() !== '') {\n                addTask(taskInput.value.trim(), prioritySelect.value);\n                taskInput.value = ''; // Clear input field after adding task\n            }\n        });\n\n        taskInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter' && taskInput.value.trim() !== '') {\n                addTask(taskInput.value.trim(), prioritySelect.value);\n                taskInput.value = ''; // Clear input field after adding task\n            }\n        });\n\n        loadTasks();\n    </script>\n</body>\n\n</html>",
    "width": 375,
    "height": 600
  },
  {
    "name": "打地鼠游戏",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%89%93%E5%9C%B0%E9%BC%A0%E6%B8%B8%E6%88%8F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 700px;\n            --uiHeight: 500px;\n        }\n\n        .game-container {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            background: #f7dfb4;\n            border-radius: 40px;\n            position: relative;\n            background-color: #ffcd3c;\n            background-image: linear-gradient(120deg, #ffcd3c 25%, #ffed85 25%, #ffed85 50%, #ffcd3c 50%, #ffcd3c 75%, #ffed85 75%, #ffed85 100%);\n            background-size: 28.28px 28.28px;\n        }\n\n        .hole,\n        .score-container,\n        .button {\n            width: 100px;\n            height: 100px;\n            border-radius: 50%;\n            background-color: #e0a800;\n            box-shadow: inset -5px -5px 10px rgba(0, 0, 0, 0.2);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .hit-popup {\n            position: absolute;\n            top: -20px;\n            font-size: 24px;\n            animation: popup 0.5s;\n        }\n\n        .hammer-cursor {\n            cursor: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='64' height='64' fill='none' viewBox='0 0 64 64'%3e%3cpath fill='%23A06841' d='M54.948 52.812 52.28 55.12a2.455 2.455 0 0 1-3.468-.26L17.184 16.684l4.068-3.06 33.9 35.752a2.4 2.4 0 0 1-.204 3.436Z'/%3e%3cpath fill='%237D5133' d='m20.076 20.172 7.528 9.088c1.172-1.768 1.772-3.888 2.252-6.564l-7.268-7.664a6.616 6.616 0 0 0-1.484 1.716c-.62 1.036-.944 2.216-1.028 3.424Z'/%3e%3cpath fill='%2382AEC0' d='M34.996 8.292c-6.908-.08-9.464.532-13.312 3.856l-3.46 2.988c-1.256 1.084-2.924 2.028-2.66 3.904.096.684.308 1.376.18 2.056-.124.64-.868.96-1.4.596-.496-.344-1.048-.764-1.66-.836a2.106 2.106 0 0 0-1.612.5l-2.676 2.38s-.384 1.556 2.612 4.948c2.996 3.392 4.924 3.148 4.924 3.148l2.516-2.212c.424-.372.64-.916.632-1.48-.012-.656-.396-1.164-.624-1.756-.044-.112-.296-.512.144-.872.392-.34 1.196-.224 1.652-.1.46.124.896.32 1.36.44.9.236 1.32-.184 1.948-.724.552-.48 3.888-3.36 5-4.32 2.22-1.92-1.164-5.28-1.164-5.28-1.6-1.8 8.068-6.336 8.068-6.336.704-.252.488-.888-.468-.9Z'/%3e%3cpath fill='%232F7889' d='M21.608 25.852c.188.048.352.064.504.06v-.076c-.04-.432-.276-.82-.512-1.18a25.793 25.793 0 0 0-5.476-6 6.61 6.61 0 0 0-.548-.4c-.04.244-.048.504-.008.788.096.684.308 1.376.18 2.056-.136.7-.868.896-1.432.632a11.714 11.714 0 0 1 3.624 3.684c.124.2.248.412.392.6a.71.71 0 0 1 .272-.504c.392-.34 1.196-.224 1.652-.1.452.124.892.32 1.352.44Zm-8.236.844c2.096 2.192 3.276 4.468 2.636 5.084-.644.616-2.864-.664-4.964-2.856-2.1-2.192-3.292-4.568-2.652-5.184.64-.616 2.884.764 4.98 2.956Z'/%3e%3cpath fill='%23B9E4EA' d='M21.54 15.36c1.668-.712 3.156-2.232 5.096-3.908a8.978 8.978 0 0 1 1.98-1.272c.268-.128.172-.536-.128-.528-1 .016-1.892.32-2.768.7-1.228.532-2.308 1.344-3.356 2.176-.716.572-2.4 1.992-3.46 2.888-.196.168-.044.428.216.432.752.004 1.172.044 2.42-.488Zm-10.512 6.964c-.704.792.192 1.008 1.776 2.316 1.116.924 2.3.068 2.312-.796.008-.776-.184-1.192-1.316-1.904-1.128-.712-2.132-.336-2.772.384Z'/%3e%3c/svg%3e\"), auto !important;\n        }\n\n\n        .click-cursor.hammer-cursor {\n            cursor: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='70' height='70' fill='none' viewBox='0 0 70 70'%3e%3cg clip-path='url(%23a)'%3e%3cpath fill='%23A06841' d='m65.28 41.55-1.157 3.333a2.455 2.455 0 0 1-3.133 1.508L14.51 29.145l1.993-4.684 47.234 14.012a2.4 2.4 0 0 1 1.542 3.078Z'/%3e%3cpath fill='%237D5133' d='m18.76 30.719 11.063 4.106c.13-2.117-.41-4.253-1.332-6.81L18.365 25.01a6.618 6.618 0 0 0-.427 2.229c-.02 1.207.29 2.39.822 3.479Z'/%3e%3cpath fill='%2382AEC0' d='M25.74 12.97c-6.022 3.385-7.93 5.193-9.6 9.996-.5 1.438-1.003 2.879-1.502 4.317-.546 1.567-1.519 3.219-.352 4.711.425.545.955 1.038 1.184 1.691.212.616-.272 1.265-.915 1.216-.601-.05-1.29-.138-1.855.106-.531.233-.964.69-1.146 1.24l-1.128 3.398s.446 1.54 4.736 2.98c4.291 1.439 5.839.264 5.839.264l1.073-3.174a1.92 1.92 0 0 0-.193-1.598c-.338-.562-.925-.81-1.418-1.209-.095-.075-.513-.295-.312-.827.17-.49.924-.792 1.38-.912.461-.123.937-.171 1.399-.3.897-.245 1.05-.819 1.325-1.6.238-.692 1.687-4.854 2.17-6.241.962-2.773-3.648-3.991-3.648-3.991-2.286-.759 3.819-9.521 3.819-9.521.484-.57-.021-1.013-.855-.546Z'/%3e%3cpath fill='%232F7889' d='M22.927 34.871c.186-.052.336-.12.466-.2l-.038-.065c-.25-.354-.649-.573-1.033-.766a25.794 25.794 0 0 0-7.743-2.458 6.612 6.612 0 0 0-.674-.073c.087.232.21.46.387.687.425.544.954 1.037 1.184 1.69.232.674-.304 1.21-.925 1.264 1.737.087 3.455.55 4.98 1.378.208.111.422.233.64.324a.71.71 0 0 1-.016-.573c.17-.49.924-.792 1.38-.913.454-.118.933-.168 1.392-.294Zm-6.711 4.85c2.911.85 5.071 2.23 4.825 3.084-.25.856-2.813.857-5.727.009-2.915-.848-5.135-2.31-4.889-3.163.246-.854 2.88-.78 5.79.07Z'/%3e%3cpath fill='%23B9E4EA' d='M17.621 25.82c1.089-1.451 1.617-3.512 2.46-5.933a8.974 8.974 0 0 1 1.078-2.091c.169-.245-.119-.55-.374-.394-.858.514-1.479 1.223-2.048 1.99-.797 1.075-1.326 2.318-1.818 3.563-.334.853-1.083 2.925-1.553 4.231-.085.244.176.393.404.266.653-.373 1.037-.548 1.851-1.633ZM12 37.105c-.214 1.038.67.777 2.696 1.118 1.428.242 2.026-1.09 1.604-1.845-.381-.676-.755-.94-2.092-.991-1.332-.053-2.014.775-2.208 1.718Z'/%3e%3c/g%3e%3cdefs%3e%3cclipPath id='a'%3e%3cpath fill='white' d='M0 0h51.2v51.2H0z' transform='rotate(-30 47.84 12.76)'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\"), auto !important;\n        }\n\n        @keyframes popup {\n            0% {\n                opacity: 1;\n            }\n\n            100% {\n                opacity: 0;\n            }\n        }\n\n        .hidden {\n            display: none;\n        }\n    </style>\n</head>\n\n<body class=\"hammer-cursor\">\n    <div class=\"game-container bg-white mx-auto p-4 rounded shadow-lg flex flex-col items-center text-orange-950\">\n        <div class=\"grid grid-cols-3 gap-4 w-full h-full justify-center items-center place-items-center\">\n            <div id=\"time-container\" class=\"hole\">\n                <span>时间: <span id=\"time\" class=\"font-bold\">30</span> 秒</span>\n            </div>\n            <div id=\"restart-button\" class=\"button text-center text-lg\">\n                <span>重新开始</span>\n            </div>\n            <div id=\"score-container\" class=\"score-container flex flex-col items-center justify-center\">\n                <span>得分: <span id=\"score\" class=\"font-bold\">0</span></span>\n                <span>最高分: <span id=\"high-score\" class=\"font-bold\">0</span></span>\n            </div>\n        </div>\n        <div class=\"grid grid-cols-3 gap-4 w-full h-full justify-center items-center place-items-center\">\n            <div id=\"hole-1\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-1\"></iconify-icon>\n            </div>\n            <div id=\"hole-2\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-2\"></iconify-icon>\n            </div>\n            <div id=\"hole-3\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-3\"></iconify-icon>\n            </div>\n            <div id=\"hole-4\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-4\"></iconify-icon>\n            </div>\n            <div id=\"hole-5\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-5\"></iconify-icon>\n            </div>\n            <div id=\"hole-6\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-6\"></iconify-icon>\n            </div>\n            <div id=\"hole-7\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-7\"></iconify-icon>\n            </div>\n            <div id=\"hole-8\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-8\"></iconify-icon>\n            </div>\n            <div id=\"hole-9\" class=\"hole flex justify-center items-center relative\">\n                <iconify-icon icon=\"noto:mouse-face\" class=\"text-6xl hidden\" id=\"mole-9\"></iconify-icon>\n            </div>\n        </div>\n    </div>\n\n    <script type=\"module\">\n        document.body.addEventListener('mousedown', function () {\n            document.body.classList.add('click-cursor');\n        });\n\n        document.body.addEventListener('mouseup', function () {\n            document.body.classList.remove('click-cursor');\n        });\n\n        const timeDisplay = document.getElementById('time');\n        const scoreDisplay = document.getElementById('score');\n        const highScoreDisplay = document.getElementById('high-score');\n        const restartButton = document.getElementById('restart-button');\n        const holes = document.querySelectorAll('[id^=\"hole-\"]');\n        const moles = document.querySelectorAll('[id^=\"mole-\"]');\n\n        let currentTimeout;\n        let currentHoleIndex = null;\n        let score = 0;\n        let highScore = 0;\n        let time = 30;\n        let moleInterval = 1000;\n        let gameInterval;\n        let gameActive = true;\n\n        function startGame() {\n            time = 30;\n            score = 0;\n            moleInterval = 1000;\n            gameActive = true;\n            scoreDisplay.textContent = 0;\n            timeDisplay.textContent = 30;\n            applyHighScore();\n\n            gameInterval = setInterval(() => {\n                time--;\n                timeDisplay.textContent = time;\n\n                if (time <= 0) {\n                    clearInterval(gameInterval);\n                    gameActive = false;\n                    clearTimeout(currentTimeout);\n                    if (currentHoleIndex !== null) {\n                        moles[currentHoleIndex].classList.add('hidden');\n                    }\n                    if (score > highScore) {\n                        highScore = score;\n                        applyHighScore();\n                    }\n                }\n\n                if (time % 5 === 0 && gameActive) {\n                    moleInterval *= 0.85;\n                }\n            }, 1000);\n\n            showMole();\n        }\n\n        function restartGame() {\n            clearInterval(gameInterval);\n            clearTimeout(currentTimeout);\n            if (currentHoleIndex !== null) {\n                moles[currentHoleIndex].classList.add('hidden');\n            }\n            startGame();\n        }\n\n        function applyHighScore() {\n            highScoreDisplay.textContent = highScore;\n        }\n\n        function showMole() {\n            if (!gameActive) return;\n\n            if (currentHoleIndex !== null) {\n                moles[currentHoleIndex].classList.add('hidden');\n            }\n\n            const randomHoleIndex = Math.floor(Math.random() * holes.length);\n            moles[randomHoleIndex].classList.remove('hidden');\n            currentHoleIndex = randomHoleIndex;\n\n            currentTimeout = setTimeout(showMole, moleInterval);\n        }\n\n        holes.forEach((hole, holeIndex) => {\n            hole.addEventListener('click', () => {\n                handleHit(holeIndex);\n            });\n        });\n\n        moles.forEach((mole, moleIndex) => {\n            mole.addEventListener('click', () => {\n                handleHit(moleIndex);\n            });\n        });\n\n        function handleHit(index) {\n            if (gameActive && index === currentHoleIndex) {\n                score++;\n                scoreDisplay.textContent = score;\n                moles[index].classList.add('hidden');\n                clearTimeout(currentTimeout);\n                showMole();\n\n                // 添加视觉反馈\n                const hole = document.getElementById(`hole-${index + 1}`);\n                hole.classList.add('hit-feedback');\n                const hitPopup = document.createElement('div');\n                hitPopup.className = 'hit-popup';\n                hitPopup.style.fontSize = '64px';\n                hitPopup.textContent = '💥';\n                hole.appendChild(hitPopup);\n\n                setTimeout(() => {\n                    hole.classList.remove('hit-feedback');\n                    hitPopup.remove();\n                }, 400);\n            }\n        }\n\n        document.addEventListener('click', (e) => {\n            const mx = e.clientX,\n                my = e.clientY;\n            moles.forEach((mole, index) => {\n                const rect = mole.getBoundingClientRect();\n                if (mx > rect.left - 64 && mx < rect.right + 64 && my > rect.top - 64 && my < rect.bottom + 64) {\n                    handleHit(index);\n                }\n            });\n        });\n\n        restartButton.addEventListener('click', restartGame);\n\n        startGame();\n    </script>\n</body>\n\n</html>",
    "width": 700,
    "height": 500
  },
  {
    "name": "搜索框",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%90%9C%E7%B4%A2%E6%A1%86.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>搜索框组件</title>\n    <style>\n        :root {\n            --defaultWidth: 300px;\n            --defaultHeight: 60px;\n            --uiWidth: var(--defaultWidth);\n            --uiHeight: var(--defaultHeight);\n        }\n\n        #search-container {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            position: relative;\n            display: flex;\n            align-items: center;\n            border: 2px solid #ccc;\n            border-radius: 30px;\n            padding: 10px;\n        }\n\n        #search-input {\n            width: 100%;\n            border: none;\n            outline: none;\n            font-size: 16px;\n            padding-left: 10px;\n        }\n\n        iconify-icon {\n            cursor: pointer;\n            color: grey;\n        }\n    </style>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n</head>\n\n<body>\n    <div id=\"search-container\">\n        <input type=\"text\" id=\"search-input\" placeholder=\"请输入搜索内容...\">\n        <iconify-icon id=\"clean-icon\" icon=\"ic:baseline-clear\" width=\"24\" height=\"24\" style=\"display:none; cursor:pointer; margin-right: 10px;\"></iconify-icon>\n        <iconify-icon id=\"search-icon\" icon=\"ic:baseline-search\" width=\"24\" height=\"24\"></iconify-icon>\n    </div>\n\n    <script>\n        const searchInput = document.getElementById('search-input');\n        const searchIcon = document.getElementById('search-icon');\n        const cleanIcon = document.getElementById('clean-icon');\n\n        searchInput.addEventListener('input', function () {\n            if (searchInput.value.trim() !== '') {\n                searchIcon.style.color = '#3786f4';\n                cleanIcon.style.display = 'inline';\n            } else {\n                searchIcon.style.color = 'grey';\n                cleanIcon.style.display = 'none';\n            }\n        });\n\n        cleanIcon.addEventListener('click', function () {\n            searchInput.value = '';\n            searchIcon.style.color = 'grey';\n            cleanIcon.style.display = 'none';\n        });\n    </script>\n</body>\n\n</html>",
    "width": 300,
    "height": 60
  },
  {
    "name": "文件上传区域",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8C%BA%E5%9F%9F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>文件上传区域</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 400px;\n            --uiHeight: 250px;\n        }\n    </style>\n</head>\n\n<body class=\"w-full h-full\">\n    <div id=\"fileUploadArea\"\n        class=\"w-full h-full flex items-center justify-center rounded-lg border border-dashed border-gray-400\">\n        <label id=\"fileInputLabel\" for=\"fileInput\" class=\"w-full h-full flex flex-col items-center justify-center rounded-lg cursor-pointer\">\n            <iconify-icon id=\"uploadIcon\" icon=\"ic:round-cloud-upload\" class=\"text-gray-400 text-6xl\"></iconify-icon>\n            <p id=\"uploadText\" class=\"text-gray-500 mt-4\">点击或拖拽文件到此处上传</p>\n        </label>\n        <input id=\"fileInput\" type=\"file\" class=\"hidden\">\n    </div>\n\n    <script>\n        const fileInput = document.getElementById('fileInput');\n        const fileInputLabel = document.getElementById('fileInputLabel');\n        const uploadIcon = document.getElementById('uploadIcon');\n        const uploadText = document.getElementById('uploadText');\n\n        fileInput.addEventListener('change', (event) => {\n            const files = event.target.files;\n            if (files.length > 0) {\n                const fileName = files[0].name;\n                uploadIcon.icon = 'ic:round-check-circle';\n                uploadIcon.classList.add('text-green-500');\n                uploadText.textContent = `已选择文件: ${fileName}`;\n            }\n        });\n\n        fileInputLabel.addEventListener('dragover', (event) => {\n            event.preventDefault();\n            fileInputLabel.classList.add('bg-gray-100');\n        });\n\n        fileInputLabel.addEventListener('dragleave', (event) => {\n            event.preventDefault();\n            fileInputLabel.classList.remove('bg-gray-100');\n        });\n\n        fileInputLabel.addEventListener('drop', (event) => {\n            event.preventDefault();\n            fileInputLabel.classList.remove('bg-gray-100');\n            const files = event.dataTransfer.files;\n            if (files.length > 0) {\n                fileInput.files = files;\n                const fileName = files[0].name;\n                uploadIcon.icon = 'ic:round-check-circle';\n                uploadIcon.classList.add('text-green-500');\n                uploadText.textContent = `已选择文件: ${fileName}`;\n            }\n        });\n    </script>\n</body>\n\n</html>",
    "width": 400,
    "height": 250
  },
  {
    "name": "日历组件",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6.png",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Calendar UI</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --defaultWidth: 400;\n            --defaultHeight: 450;\n            --uiWidth: var(--defaultWidth);\n            --uiHeight: var(--defaultHeight);\n        }\n\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            background-color: #f8f9fa;\n        }\n\n        #calendarContainer {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            background-color: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"calendarContainer\">\n        <div id=\"header\" class=\"flex items-center justify-between px-4 py-2 bg-gray-100 border-b\">\n            <button id=\"previousMonthBtn\" class=\"hover:bg-gray-200 w-8 h-8 flex items-center justify-center rounded-full\">\n                <iconify-icon icon=\"bi:arrow-left\" width=\"20\" height=\"20\"></iconify-icon>\n            </button>\n            <h2 id=\"currentMonthYear\" class=\"font-bold text-lg\"></h2>\n            <button id=\"nextMonthBtn\" class=\"hover:bg-gray-200 w-8 h-8 flex items-center justify-center rounded-full\">\n                <iconify-icon icon=\"bi:arrow-right\" width=\"20\" height=\"20\"></iconify-icon>\n            </button>\n        </div>\n        <div id=\"weekdays\" class=\"grid grid-cols-7 gap-2 p-2 text-center text-gray-500\">\n            <div id=\"sunday\">日</div>\n            <div id=\"monday\">一</div>\n            <div id=\"tuesday\">二</div>\n            <div id=\"wednesday\">三</div>\n            <div id=\"thursday\">四</div>\n            <div id=\"friday\">五</div>\n            <div id=\"saturday\">六</div>\n        </div>\n        <div id=\"calendarGrid\" class=\"grid grid-cols-7 gap-2 p-2\"></div>\n    </div>\n    <script>\n        const calendarGrid = document.getElementById('calendarGrid');\n        const currentMonthYear = document.getElementById('currentMonthYear');\n        const previousMonthBtn = document.getElementById('previousMonthBtn');\n        const nextMonthBtn = document.getElementById('nextMonthBtn');\n\n        let today = new Date();\n        let currentMonth = today.getMonth();\n        let currentYear = today.getFullYear();\n\n        function renderCalendar() {\n            const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n            const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n            const daysInMonth = lastDayOfMonth.getDate();\n            const dayOfWeekOfFirstDay = firstDayOfMonth.getDay();\n\n            calendarGrid.innerHTML = '';\n\n            currentMonthYear.textContent = `${currentYear}年 ${currentMonth + 1}月`;\n\n            for (let i = 0; i < dayOfWeekOfFirstDay; i++) {\n                const emptyCell = document.createElement('div');\n                calendarGrid.appendChild(emptyCell);\n            }\n\n            for (let i = 1; i <= daysInMonth; i++) {\n                const dayCell = document.createElement('div');\n                dayCell.textContent = i;\n                dayCell.classList.add('text-center', 'p-2', 'border', 'rounded-lg', 'hover:bg-gray-200');\n\n                if (i === today.getDate() && currentMonth === today.getMonth() && currentYear === today.getFullYear()) {\n                    dayCell.classList.add('bg-blue-200');\n                }\n\n                // Add event listener to each day cell\n                dayCell.addEventListener('click', () => {\n                    console.log(`Selected date: ${currentYear}-${currentMonth + 1}-${i}`);\n                });\n\n                calendarGrid.appendChild(dayCell);\n            }\n        }\n\n        previousMonthBtn.addEventListener('click', () => {\n            currentMonth--;\n            if (currentMonth < 0) {\n                currentMonth = 11;\n                currentYear--;\n            }\n            renderCalendar();\n        });\n\n        nextMonthBtn.addEventListener('click', () => {\n            currentMonth++;\n            if (currentMonth > 11) {\n                currentMonth = 0;\n                currentYear++;\n            }\n            renderCalendar();\n        });\n\n        renderCalendar();\n    </script>\n</body>\n\n</html>",
    "width": 400,
    "height": 420
  },
  {
    "name": "文本播放器",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%96%87%E6%9C%AC%E6%92%AD%E6%94%BE%E5%99%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>文本播放器</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 400px;\n            --uiHeight: 400px;\n        }\n\n        body,\n        html {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            margin: 0;\n            padding: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-family: 'Arial', sans-serif;\n        }\n\n        #app {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n            gap: 16px;\n            border: 1px solid lightgray;\n        }\n\n        #text-input {\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        #control-btn,\n        #restart-btn {\n            cursor: pointer;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"app\" class=\"p-4 flex rounded bg-gray-50\">\n        <textarea id=\"text-input\" class=\"w-full h-4/5 p-2 border rounded resize-none flex-1\" placeholder=\"请输入需要朗读的文本...\">多年以后，面对行刑队，奥雷里亚诺·布恩迪亚上校将会回想起父亲带他去见识冰块的那个遥远的下午。</textarea>\n        <div class=\"w-full flex items-center justify-between\">\n            <div class=\"flex items-center\">\n                <iconify-icon id=\"control-btn\" class=\"text-blue-500 text-3xl\" icon=\"ic:baseline-play-circle\"></iconify-icon>\n                <iconify-icon id=\"restart-btn\" class=\"ml-2 text-green-500 text-3xl\" icon=\"ic:baseline-replay-circle-filled\"></iconify-icon>\n                <label for=\"rate-range\" class=\"ml-2 text-gray-600\">语速</label>\n                <input id=\"rate-range\" type=\"range\" min=\"0.5\" max=\"2\" value=\"1\" step=\"0.1\" class=\"ml-2 w-full\" style=\"max-width: 100px;\">\n                <span id=\"rate-value\" class=\"ml-2 text-gray-600\">1</span>\n            </div>\n            <span id=\"status\" class=\"text-gray-600\">暂停中</span>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\">\n        let isPlaying = false;\n        let pausedAt = 0;\n        const textArea = document.getElementById('text-input');\n        const controlBtn = document.getElementById('control-btn');\n        const restartBtn = document.getElementById('restart-btn');\n        const statusText = document.getElementById('status');\n        const rateRange = document.getElementById('rate-range');\n        const rateValue = document.getElementById('rate-value');\n        let utterance = new SpeechSynthesisUtterance();\n        utterance.onboundary = event => {\n            if (event.name === 'word') {\n                pausedAt = event.charIndex;\n            }\n        };\n\n        rateRange.addEventListener('input', (event) => {\n            const rate = event.target.value;\n            rateValue.textContent = rate;\n            utterance.rate = rate;\n            if (isPlaying) {\n                window.speechSynthesis.cancel();\n                utterance.text = textArea.value.substring(pausedAt);\n                window.speechSynthesis.speak(utterance);\n            }\n        });\n\n        controlBtn.addEventListener('click', () => {\n            if (isPlaying) {\n                window.speechSynthesis.cancel();\n                controlBtn.setAttribute('icon', 'ic:baseline-play-circle');\n                statusText.textContent = '暂停中';\n            } else {\n                utterance.text = textArea.value.substring(pausedAt);\n                utterance.rate = rateRange.value;\n                window.speechSynthesis.speak(utterance);\n                controlBtn.setAttribute('icon', 'ic:baseline-pause-circle');\n                statusText.textContent = '播放中';\n            }\n            isPlaying = !isPlaying;\n        });\n\n        restartBtn.addEventListener('click', () => {\n            window.speechSynthesis.cancel();\n            pausedAt = 0;\n            utterance.text = textArea.value;\n            utterance.rate = rateRange.value;\n            window.speechSynthesis.speak(utterance);\n            controlBtn.setAttribute('icon', 'ic:baseline-pause-circle');\n            statusText.textContent = '播放中';\n            isPlaying = true;\n        });\n\n        utterance.onend = () => {\n            isPlaying = false;\n            pausedAt = 0;\n            controlBtn.setAttribute('icon', 'ic:baseline-play-circle');\n            statusText.textContent = '暂停中';\n        };\n    </script>\n</body>\n\n</html>",
    "width": 400,
    "height": 400
  },
  {
    "name": "时钟",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%97%B6%E9%92%9F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>仿真时钟</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n        :root {\n            --uiWidth: 300px;\n            --uiHeight: 300px;\n        }\n\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100vw;\n            height: 100vh;\n            margin: 0;\n        }\n\n        #clock {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background-color: #f3f4f6;\n            border-radius: 50%;\n            border: 5px solid #1f2937;\n            position: relative;\n        }\n\n        .hand {\n            position: absolute;\n            bottom: 50%;\n            background-color: #1f2937;\n            border-radius: 5px;\n            transform-origin: 50% 100%;\n        }\n\n        #hour-hand {\n            width: 6%;\n            height: 20%;\n        }\n\n        #minute-hand {\n            width: 4%;\n            height: 30%;\n        }\n\n        #second-hand {\n            width: 2%;\n            height: 35%;\n            background-color: #ef4444;\n        }\n\n        #shaft {\n            width: 10%;\n            height: 10%;\n            background-color: #1f2937;\n            border-radius: 50%;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n\n        #shaft0 {\n            width: 5%;\n            height: 5%;\n            background-color: #ef4444;\n            border-radius: 50%;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"clock\">\n        <div id=\"shaft\"></div>\n        <div id=\"hour-hand\" class=\"hand\"></div>\n        <div id=\"minute-hand\" class=\"hand\"></div>\n        <div id=\"second-hand\" class=\"hand\"></div>\n        <div id=\"shaft0\"></div>\n    </div>\n\n    <script>\n        const secondHand = document.getElementById('second-hand');\n        const minuteHand = document.getElementById('minute-hand');\n        const hourHand = document.getElementById('hour-hand');\n\n        function setClock() {\n            const currentDate = new Date();\n            const secondsRatio = currentDate.getSeconds() / 60;\n            const minutesRatio = (secondsRatio + currentDate.getMinutes()) / 60;\n            const hoursRatio = (minutesRatio + currentDate.getHours()) / 12;\n\n            secondHand.style.transform = `rotate(${secondsRatio * 360}deg)`;\n            minuteHand.style.transform = `rotate(${minutesRatio * 360}deg)`;\n            hourHand.style.transform = `rotate(${hoursRatio * 360}deg)`;\n        }\n\n        setInterval(setClock, 1000);\n        setClock();  // Initialize clock on load\n    </script>\n</body>\n\n</html>",
    "width": 300,
    "height": 300
  },
  {
    "name": "星级评分控件",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E6%98%9F%E7%BA%A7%E8%AF%84%E5%88%86%E6%8E%A7%E4%BB%B6.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 250px;\n            --uiHeight: 60px;\n        }\n        #rating-container {\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 10px;\n        }\n        .star {\n            cursor: pointer;\n            transition: color 0.2s;\n            color: #dddddd;\n            font-size: 2rem;\n        }\n        .star:hover,\n        .star.active,\n        .star.highlight {\n            color: #fec600;\n        }\n    </style>\n</head>\n<body class=\"bg-white\">\n    <div id=\"rating-container\">\n        <iconify-icon id=\"star1\" class=\"star\" icon=\"ant-design:star-filled\"></iconify-icon>\n        <iconify-icon id=\"star2\" class=\"star\" icon=\"ant-design:star-filled\"></iconify-icon>\n        <iconify-icon id=\"star3\" class=\"star\" icon=\"ant-design:star-filled\"></iconify-icon>\n        <iconify-icon id=\"star4\" class=\"star\" icon=\"ant-design:star-filled\"></iconify-icon>\n        <iconify-icon id=\"star5\" class=\"star\" icon=\"ant-design:star-filled\"></iconify-icon>\n    </div>\n    <script>\n        const stars = document.querySelectorAll('.star');\n        stars.forEach((star, index) => {\n            star.addEventListener('click', () => {\n                for (let i = 0; i < stars.length; i++) {\n                    if (i <= index) {\n                        stars[i].classList.add('active');\n                    } else {\n                        stars[i].classList.remove('active');\n                    }\n                }\n            });\n\n            star.addEventListener('mouseenter', () => {\n                for (let i = 0; i <= index; i++) {\n                    stars[i].classList.add('highlight');\n                }\n            });\n\n            star.addEventListener('mouseleave', () => {\n                for (let i = 0; i < stars.length; i++) {\n                    stars[i].classList.remove('highlight');\n                }\n            });\n        });\n    </script>\n</body>\n</html>",
    "width": 250,
    "height": 60
  },
  {
    "name": "画板",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E7%94%BB%E5%B8%83.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>画板</title>\n  <style>\n    :root {\n      --defaultWidth: 800px;\n      --defaultHeight: 600px;\n      --uiWidth: 100%;\n      --uiHeight: 100%;\n    }\n\n    body,\n    html {\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    #canvas-container {\n      width: var(--uiWidth);\n      height: var(--uiHeight);\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      background: #efefef;\n    }\n\n    #drawingCanvas {\n      width: 100%;\n      height: calc(100% - 50px);\n      background: white;\n      border: 12px solid #efefef;\n      border-radius: 24px;\n      cursor: crosshair;\n    }\n\n    #toolbar {\n      width: 100%;\n      height: 50px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: #efefef;\n      padding: 12px;\n      padding-bottom: 0;\n    }\n\n    .tool-item {\n      margin: 0 10px;\n      height: 34px;\n    }\n\n    #clearBtn {\n      background-color: #ef4444;\n      color: white;\n      border-radius: 8px;\n      padding: 0 15px;\n    }\n\n    #brushSize {\n      border-radius: 8px;\n      padding: 0 10px;\n    }\n\n    #colorPicker {\n      width: 34px;\n      height: 34px;\n      border-radius: 50%;\n      border: none;\n      padding: 0;\n      cursor: pointer;\n    }\n\n    #undoBtn {\n      background-color: #3b82f6;\n      color: white;\n      border-radius: 8px;\n      padding: 0 15px;\n      margin: 0 10px;\n    }\n\n    #redoBtn {\n      background-color: #f59e0b;\n      color: white;\n      border-radius: 8px;\n      padding: 0 15px;\n      margin: 0 10px;\n    }\n\n    #shapeSelector {\n      border-radius: 8px;\n      padding: 0 10px;\n    }\n  </style>\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n</head>\n\n<body>\n  <div id=\"canvas-container\">\n    <div id=\"toolbar\">\n      <select id=\"shapeSelector\" class=\"tool-item\">\n        <option value=\"none\">自由绘制</option>\n        <option value=\"rectangle\">矩形</option>\n        <option value=\"circle\">圆形</option>\n      </select>\n      <select id=\"brushSize\" class=\"tool-item\">\n        <option value=\"2\">细笔</option>\n        <option value=\"5\" selected>中笔</option>\n        <option value=\"10\">粗笔</option>\n      </select>\n      <input type=\"color\" id=\"colorPicker\" class=\"tool-item\">\n      <button id=\"clearBtn\" class=\"tool-item\">清空</button>\n      <button id=\"undoBtn\" class=\"tool-item\">撤销</button>\n      <button id=\"redoBtn\" class=\"tool-item\">重做</button>\n    </div>\n    <canvas id=\"drawingCanvas\"></canvas>\n  </div>\n\n  <script>\n    const canvas = document.getElementById('drawingCanvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    let painting = false;\n    let drawingShape = false;\n    let brushSize = 5;\n    let color = '#000000';\n    let shape = 'none';\n    const undoStack = [];\n    const redoStack = [];\n    let startX, startY;\n\n    function saveState() {\n      undoStack.push(canvas.toDataURL());\n      if (undoStack.length > 10) {\n        undoStack.shift();\n      }\n    }\n\n    function startPosition(e) {\n      saveState();\n      if (shape === 'none') {\n        painting = true;\n        draw(e);\n      } else {\n        drawingShape = true;\n        startX = e.clientX - canvas.offsetLeft;\n        startY = e.clientY - canvas.offsetTop;\n      }\n    }\n\n    function finishedPosition() {\n      painting = false;\n      drawingShape = false;\n      ctx.beginPath();\n    }\n\n    function draw(e) {\n      if (!painting) return;\n      ctx.lineWidth = brushSize;\n      ctx.lineCap = 'round';\n      ctx.strokeStyle = color;\n\n      ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);\n    }\n\n    function drawShape(e) {\n      if (!drawingShape) return;\n      const x = e.clientX - canvas.offsetLeft;\n      const y = e.clientY - canvas.offsetTop;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const img = new Image();\n      img.src = undoStack[undoStack.length - 1];\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0);\n        ctx.beginPath();\n        ctx.strokeStyle = color;\n        ctx.lineWidth = brushSize;\n        if (shape === 'rectangle') {\n          ctx.rect(startX, startY, x - startX, y - startY);\n        } else if (shape === 'circle') {\n          const radius = Math.sqrt(Math.pow(x - startX, 2) + Math.pow(y - startY, 2));\n          ctx.arc(startX, startY, radius, 0, 2 * Math.PI);\n        }\n        ctx.stroke();\n      };\n    }\n\n    function undo() {\n      if (undoStack.length > 0) {\n        redoStack.push(canvas.toDataURL());\n        restoreState(undoStack.pop());\n      }\n    }\n\n    function redo() {\n      if (redoStack.length > 0) {\n        undoStack.push(canvas.toDataURL());\n        restoreState(redoStack.pop());\n      }\n    }\n\n    function restoreState(state) {\n      const img = new Image();\n      img.onload = function () {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0);\n      };\n      img.src = state;\n    }\n\n    canvas.addEventListener('mousedown', startPosition);\n    canvas.addEventListener('mouseup', finishedPosition);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mousemove', drawShape);\n\n    document.getElementById('clearBtn').addEventListener('click', () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      saveState();\n      redoStack.length = 0;\n    });\n\n    document.getElementById('brushSize').addEventListener('change', function () {\n      brushSize = this.value;\n    });\n\n    document.getElementById('colorPicker').addEventListener('input', function () {\n      color = this.value;\n    });\n\n    document.getElementById('shapeSelector').addEventListener('change', function () {\n      shape = this.value;\n    });\n\n    document.getElementById('undoBtn').addEventListener('click', undo);\n    document.getElementById('redoBtn').addEventListener('click', redo);\n  </script>\n</body>\n\n</html>",
    "width": 800,
    "height": 600
  },
  {
    "name": "2048 游戏",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/2048%20%E6%B8%B8%E6%88%8F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-cn\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>2048 游戏</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 600px;\n            --uiHeight: 700px;\n        }\n\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n        }\n\n        #gameContainer {\n            border: 2px solid #854d0e;\n            border-radius: 10px;\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n            background-color: #faf8ef;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            align-items: center;\n            padding: 20px;\n        }\n\n        #container {\n            width: 100%;\n        }\n\n        .grid-container {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n            grid-template-rows: repeat(4, 1fr);\n            gap: 10px;\n            width: 100%;\n            aspect-ratio: 1 / 1;\n            background-color: #bbada0;\n            border-radius: 10px;\n            padding: 12px;\n        }\n\n        .grid-item {\n            background-color: #cdc1b4;\n            border-radius: 10px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            font-size: 2rem;\n            font-weight: bold;\n            color: #776e65;\n            user-select: none;\n        }\n\n        #modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.5);\n            display: none;\n            justify-content: center;\n            align-items: center;\n        }\n\n        #modalContent {\n            background-color: #fff;\n            padding: 20px;\n            border-radius: 10px;\n            text-align: center;\n            max-width: 500px;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"gameContainer\">\n        <div id=\"container\" class=\"flex flex-col items-center\">\n            <div class=\"flex justify-between items-center w-full mb-4\">\n                <div class=\"flex flex-col flex-1 items-start\">\n                    <div id=\"score\" class=\"text-2xl font-bold text-yellow-600\">分数: 0</div>\n                    <div id=\"bestScore\" class=\"text-2xl font-bold text-yellow-400\">最高分: 0</div>\n                </div>\n                <div class=\"flex-1 text-center text-4xl font-bold text-yellow-900\">2048</div>\n                <div class=\"flex flex-1 justify-end\">\n                    <button id=\"restart\" class=\"px-4 py-2 bg-yellow-800 text-white rounded\">重新开始</button>\n                </div>\n            </div>\n        </div>\n        <div id=\"grid\" class=\"grid-container\">\n            <div class=\"grid-item\" id=\"tile-0-0\"></div>\n            <div class=\"grid-item\" id=\"tile-0-1\"></div>\n            <div class=\"grid-item\" id=\"tile-0-2\"></div>\n            <div class=\"grid-item\" id=\"tile-0-3\"></div>\n            <div class=\"grid-item\" id=\"tile-1-0\"></div>\n            <div class=\"grid-item\" id=\"tile-1-1\"></div>\n            <div class=\"grid-item\" id=\"tile-1-2\"></div>\n            <div class=\"grid-item\" id=\"tile-1-3\"></div>\n            <div class=\"grid-item\" id=\"tile-2-0\"></div>\n            <div class=\"grid-item\" id=\"tile-2-1\"></div>\n            <div class=\"grid-item\" id=\"tile-2-2\"></div>\n            <div class=\"grid-item\" id=\"tile-2-3\"></div>\n            <div class=\"grid-item\" id=\"tile-3-0\"></div>\n            <div class=\"grid-item\" id=\"tile-3-1\"></div>\n            <div class=\"grid-item\" id=\"tile-3-2\"></div>\n            <div class=\"grid-item\" id=\"tile-3-3\"></div>\n        </div>\n    </div>\n\n    <div id=\"modal\" class=\"flex\">\n        <div id=\"modalContent\">\n            <h2 class=\"text-2xl font-bold mb-4\">2048 游戏玩法</h2>\n            <p class=\"text-gray-700 mb-4\">使用方向键来移动方块。</p>\n            <p class=\"text-gray-700 mb-4\">当两个相同的数字相遇时，它们会合并成一个更大的数字。</p>\n            <p class=\"text-gray-700 mb-4\">通过这一过程，试着达到2048吧！</p>\n            <button id=\"startGame\" class=\"px-4 py-2 bg-yellow-800 text-white rounded\">开始游戏</button>\n        </div>\n    </div>\n\n    <script type=\"module\">\n        import { createApp } from 'https://cdn.skypack.dev/petite-vue?dts';\n\n        const COLORS = {\n            2: \"#eee4da\",\n            4: \"#ede0c8\",\n            8: \"#f2b179\",\n            16: \"#f59563\",\n            32: \"#f67c5f\",\n            64: \"#f65e3b\",\n            128: \"#edcf72\",\n            256: \"#edcc61\",\n            512: \"#edc850\",\n            1024: \"#edc53f\",\n            2048: \"#edc22e\",\n        };\n\n        let currentScore = 0;\n        let bestScore = 0;\n        let gameStarted = false;\n\n        function startNewGame() {\n            const gridElement = document.getElementById('grid');\n            let grid = new Array(4).fill(null).map(() => new Array(4).fill(0));\n            addNewNumber(grid);\n            addNewNumber(grid);\n            currentScore = 0;\n            updateScore();\n            updateGrid(gridElement, grid);\n            return grid;\n        }\n\n        function updateGrid(element, grid) {\n            for (let i = 0; i < 4; i++) {\n                for (let j = 0; j < 4; j++) {\n                    const tile = document.getElementById(`tile-${i}-${j}`);\n                    tile.textContent = grid[i][j] === 0 ? \"\" : grid[i][j];\n                    tile.style.backgroundColor = grid[i][j] === 0 ? \"#cdc1b4\" : COLORS[grid[i][j]];\n                }\n            }\n        }\n\n        function addNewNumber(grid) {\n            let emptyTiles = [];\n            for (let i = 0; i < 4; i++) {\n                for (let j = 0; j < 4; j++) {\n                    if (grid[i][j] === 0) {\n                        emptyTiles.push([i, j]);\n                    }\n                }\n            }\n            const [x, y] = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n            grid[x][y] = Math.random() < 0.9 ? 2 : 4;\n        }\n\n        function updateScore() {\n            document.getElementById('score').textContent = `分数: ${currentScore}`;\n            if (currentScore > bestScore) {\n                bestScore = currentScore;\n                document.getElementById('bestScore').textContent = `最高分: ${bestScore}`;\n            }\n        }\n\n        function handleMove(grid, direction) {\n            let hasMoved = false;\n            function moveRowLeft(row) {\n                let newRow = row.filter(num => num !== 0);\n                while (newRow.length < 4) newRow.push(0);\n                return newRow;\n            }\n            function combineRow(row) {\n                for (let i = 0; i < 3; i++) {\n                    if (row[i] === row[i + 1]) {\n                        row[i] *= 2;\n                        currentScore += row[i];\n                        row[i + 1] = 0;\n                        hasMoved = true;\n                    }\n                }\n                return row.filter(num => num !== 0);\n            }\n            function moveAndCombine(row) {\n                row = moveRowLeft(row);\n                row = combineRow(row);\n                row = moveRowLeft(row);\n                return row;\n            }\n            if ([\"Left\", \"Right\"].includes(direction)) {\n                for (let i = 0; i < 4; i++) {\n                    let row = grid[i];\n                    if (direction === \"Right\") row = row.reverse();\n                    row = moveAndCombine(row);\n                    if (direction === \"Right\") row = row.reverse();\n                    grid[i] = row;\n                }\n            } else {\n                for (let j = 0; j < 4; j++) {\n                    let column = grid.map(row => row[j]);\n                    if (direction === \"Down\") column = column.reverse();\n                    column = moveAndCombine(column);\n                    if (direction === \"Down\") column = column.reverse();\n                    for (let i = 0; i < 4; i++) {\n                        grid[i][j] = column[i];\n                    }\n                }\n            }\n            if (hasMoved) {\n                addNewNumber(grid);\n                updateScore();\n                updateGrid(document.getElementById('grid'), grid);\n            }\n            return hasMoved;\n        }\n\n        let currentGrid = startNewGame();\n\n        document.getElementById('startGame').addEventListener('click', () => {\n            document.getElementById('modal').style.display = 'none';\n            gameStarted = true;\n        });\n\n        document.addEventListener('keydown', (e) => {\n            if (!gameStarted) return;\n\n            let moved = false;\n            switch (e.key) {\n                case \"ArrowUp\": moved = handleMove(currentGrid, \"Up\"); break;\n                case \"ArrowDown\": moved = handleMove(currentGrid, \"Down\"); break;\n                case \"ArrowLeft\": moved = handleMove(currentGrid, \"Left\"); break;\n                case \"ArrowRight\": moved = handleMove(currentGrid, \"Right\"); break;\n            }\n            if (moved) {\n                updateGrid(document.getElementById('grid'), currentGrid);\n            }\n        });\n\n        document.getElementById('restart').addEventListener('click', () => {\n            currentGrid = startNewGame();\n            gameStarted = true;\n        });\n\n        // Set initial best score\n        document.getElementById('bestScore').textContent = `最高分: ${bestScore}`;\n\n        // Show modal on page load\n        document.getElementById('modal').style.display = 'flex';\n    </script>\n</body>\n\n</html>",
    "width": 600,
    "height": 700
  },
  {
    "name": "移动端导航栏",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%AF%BC%E8%88%AA%E6%A0%8F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-cn\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            font-family: 'Open Sans', sans-serif;\n        }\n\n        .nav-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            text-align: center;\n            font-size: 12px;\n            color: #9ca3af;\n        }\n\n        .nav-item.active {\n            color: #10b981;\n        }\n\n        .nav-item:hover {\n            cursor: pointer;\n        }\n\n        .nav-icon {\n            font-size: 24px;\n            margin-bottom: 4px;\n        }\n\n        /* 替换显示尺寸值 */\n        .nav-bar {\n            width: 100% !important;\n            height: 100% !important;\n            margin: 0 !important;\n            max-width: none !important;\n            min-width: none !important;\n            max-height: none !important;\n            min-height: none !important;\n            position: static !important;\n            display: flex;\n            justify-content: space-around;\n            background-color: #ffffff;\n            z-index: 10;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"nav-bar\">\n        <div class=\"nav-item active\">\n            <iconify-icon class=\"nav-icon\" icon=\"ant-design:home-filled\"></iconify-icon>\n            主页\n        </div>\n        <div class=\"nav-item\">\n            <iconify-icon class=\"nav-icon\" icon=\"mdi:magnify\"></iconify-icon>\n            发现\n        </div>\n        <div class=\"nav-item\">\n            <iconify-icon class=\"nav-icon\" icon=\"fluent:chat-16-filled\"></iconify-icon>\n            消息\n        </div>\n        <div class=\"nav-item\">\n            <iconify-icon class=\"nav-icon\" icon=\"ic:baseline-person\"></iconify-icon>\n            我的\n        </div>\n    </div>\n\n    <script>\n        // JavaScript code to handle the active state toggle\n        const navItems = document.querySelectorAll('.nav-item');\n\n        navItems.forEach(item => {\n            item.addEventListener('click', () => {\n                navItems.forEach(innerItem => {\n                    innerItem.classList.remove('active');\n                });\n                item.classList.add('active');\n            });\n        });\n    </script>\n</body>\n\n</html>",
    "width": 375,
    "height": 60
  },
  {
    "name": "登录注册表单",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8D%95.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>登录注册表单</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            font-family: 'Noto Sans SC', sans-serif;\n        }\n\n        .form-container {\n            width: 100% !important;\n            height: 100% !important;\n            margin: 0 !important;\n            max-width: none !important;\n            min-width: none !important;\n            max-height: none !important;\n            min-height: none !important;\n            position: static !important;\n        }\n\n        .tab {\n            transition: color 0.3s;\n        }\n\n        .tab:hover {\n            color: #10B981;\n        }\n\n        .active-tab {\n            color: #10B981;\n            border-bottom: 2px solid #10B981;\n        }\n    </style>\n    <script>\n        function switchTab(event) {\n            const tabs = document.querySelectorAll('.tab');\n            const forms = document.querySelectorAll('form');\n            tabs.forEach(tab => tab.classList.remove('active-tab'));\n            forms.forEach(form => form.classList.add('hidden'));\n            event.currentTarget.classList.add('active-tab');\n            const formToShow = event.currentTarget.textContent.trim() === '登录' ? 'login-form' : 'register-form';\n            document.getElementById(formToShow).classList.remove('hidden');\n        }\n    </script>\n</head>\n\n<body>\n    <div class=\"form-container mx-auto my-12 p-6 bg-white rounded shadow-lg\">\n        <div class=\"flex justify-center space-x-4 mb-6\">\n            <h2 class=\"tab active-tab cursor-pointer\" onclick=\"switchTab(event)\">登录</h2>\n            <h2 class=\"tab cursor-pointer\" onclick=\"switchTab(event)\">注册</h2>\n        </div>\n        <form id=\"login-form\">\n            <div class=\"mb-4\">\n                <label for=\"login-email\" class=\"block text-gray-700 text-sm font-bold mb-2\">邮箱</label>\n                <input type=\"email\" id=\"login-email\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    required>\n            </div>\n            <div class=\"mb-6\">\n                <label for=\"login-password\" class=\"block text-gray-700 text-sm font-bold mb-2\">密码</label>\n                <input type=\"password\" id=\"login-password\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                    required>\n            </div>\n            <div class=\"flex items-center justify-between\">\n                <button\n                    class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    type=\"submit\">登录</button>\n                <a class=\"inline-block align-baseline font-bold text-sm text-green-500 hover:text-green-800 cursor-pointer\">忘记密码?</a>\n            </div>\n        </form>\n        <form id=\"register-form\" class=\"hidden\">\n            <div class=\"mb-4\">\n                <label for=\"register-email\" class=\"block text-gray-700 text-sm font-bold mb-2\">邮箱</label>\n                <input type=\"email\" id=\"register-email\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    required>\n            </div>\n            <div class=\"mb-4\">\n                <label for=\"register-username\" class=\"block text-gray-700 text-sm font-bold mb-2\">用户名</label>\n                <input type=\"text\" id=\"register-username\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    required>\n            </div>\n            <div class=\"mb-6\">\n                <label for=\"register-password\" class=\"block text-gray-700 text-sm font-bold mb-2\">密码</label>\n                <input type=\"password\" id=\"register-password\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                    required>\n            </div>\n            <div class=\"flex items-center justify-between\">\n                <button\n                    class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    type=\"submit\">注册</button>\n            </div>\n        </form>\n    </div>\n</body>\n\n</html>",
    "width": 400,
    "height": 480
  },
  {
    "name": "笔记应用",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E7%AC%94%E8%AE%B0%E5%BA%94%E7%94%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>笔记应用</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\">\n    <script src=\"https://code.iconify.design/2/2.1.0/iconify.min.js\"></script>\n    <style>\n        .app-container {\n            width: 100% !important;\n            height: 100% !important;\n            margin: 0 !important;\n            max-width: none !important;\n            min-width: none !important;\n            max-height: none !important;\n            min-height: none !important;\n            position: static !important;\n        }\n\n        .sidebar {\n            background-color: #F7FAFC;\n            border-right: 1px solid #cccccc;\n        }\n\n        .note-editor {\n            background-color: #FFFFFF;\n        }\n\n        #editor {\n            border: none;\n        }\n\n        .quill .ql-toolbar.ql-snow,\n        .quill .ql-container.ql-snow {\n            border: none;\n        }\n\n        .note-list-item {\n            position: relative;\n        }\n\n        .note-action {\n            display: none;\n        }\n\n        .note-list-item:hover .note-action:first-child {\n            display: block;\n            position: absolute;\n            right: 6px;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n\n        .note-list-item:hover .note-action:last-child {\n            display: block;\n            position: absolute;\n            right: 24px;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"app-container flex\">\n        <aside class=\"sidebar w-1/4 px-5 py-8 overflow-y-auto\">\n            <div class=\"mb-6\">\n                <input type=\"text\" placeholder=\"搜索笔记...\" class=\"w-full px-4 py-2 rounded border-2 border-blue-500\"\n                    id=\"searchInput\" onkeyup=\"filterNotes()\">\n            </div>\n            <div class=\"flex mb-4\">\n                <button onclick=\"createNote()\"\n                    class=\"w-full py-2 bg-blue-500 text-white rounded flex justify-center items-center\">\n                    <span class=\"iconify mr-2\" data-icon=\"akar-icons:circle-plus-fill\"></span> 新建笔记\n                </button>\n            </div>\n            <ul id=\"noteList\" class=\"note-list\">\n                <!-- 动态填充 -->\n            </ul>\n        </aside>\n        <main class=\"flex-1 flex flex-col\">\n            <div class=\"note-editor p-8 flex-1\">\n                <div id=\"editor\"></div>\n            </div>\n        </main>\n    </div>\n    <script src=\"https://cdn.quilljs.com/1.3.6/quill.js\"></script>\n    <script>\n        var quill = new Quill('#editor', {\n            theme: 'snow',\n            modules: {\n                toolbar: [\n                    [{ 'header': [1, 2, false] }],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    ['link', 'image'],\n                    [{ 'align': [] }],\n                    ['clean']\n                ]\n            },\n            placeholder: '开始创作你的笔记...',\n            readOnly: false\n        });\n\n        let notes = [\n            {\n                id: Date.now(),\n                content: [{ insert: '这是一条笔记。\\n' }],\n                name: `笔记 ${formatDate(new Date())}`\n            }\n        ];\n        let selectedNoteIndex = null;\n\n        function createNote() {\n            const note = {\n                id: Date.now(),\n                content: '',\n                name: `笔记 ${formatDate(new Date())}`\n            };\n            notes.push(note);\n            renderNotes();\n            selectNote(note.id);\n        }\n\n        function deleteNote(id) {\n            notes = notes.filter(note => note.id !== id);\n            renderNotes();\n            if (selectedNoteIndex !== null && notes[selectedNoteIndex] && notes[selectedNoteIndex].id === id) {\n                quill.setContents([]);\n                selectedNoteIndex = null;\n            }\n        }\n\n        quill.on('text-change', function (delta, oldDelta, source) {\n            if (source === 'user' && selectedNoteIndex !== null && notes[selectedNoteIndex]) {\n                notes[selectedNoteIndex].content = quill.getContents();\n            }\n        });\n\n        function selectNote(id) {\n            const noteIndex = notes.findIndex(note => note.id === id);\n            if (noteIndex !== -1) {\n                quill.setContents(notes[noteIndex].content);\n                selectedNoteIndex = noteIndex;\n                highlightSelectedNote();\n            }\n        }\n\n        function renderNotes() {\n            const list = document.getElementById('noteList');\n            list.innerHTML = '';\n            notes.forEach((note, index) => {\n                const li = document.createElement('li');\n                li.setAttribute('contenteditable', false);\n                li.id = `note-${note.id}`;\n                li.innerHTML = `${note.name} <span class=\"note-action iconify\" data-icon=\"mdi:rename-box\" onclick=\"renameNote(${note.id}, this.parentElement)\"></span> <span class=\"note-action iconify\" data-icon=\"fluent:delete-24-filled\" onclick=\"deleteNote(${note.id})\"></span>`;\n                li.className = 'note-list-item mb-2 px-2 py-1 rounded cursor-pointer hover:bg-gray-100';\n                li.onclick = () => selectNote(note.id);\n                list.appendChild(li);\n                if (selectedNoteIndex === index) {\n                    li.classList.add('bg-blue-100');\n                }\n            });\n            if (notes.length > 0) {\n                selectNote(notes[0].id);\n            }\n        }\n\n        function renameNote(id, element) {\n            element.setAttribute('contenteditable', true);\n            element.focus();\n            element.onblur = () => {\n                element.setAttribute('contenteditable', false);\n                const noteIndex = notes.findIndex(note => note.id === id);\n                if (noteIndex !== -1) {\n                    notes[noteIndex].name = element.textContent.trim();\n                    renderNotes();\n                }\n            };\n        }\n\n        function highlightSelectedNote() {\n            const listItems = document.querySelectorAll('#noteList li');\n            listItems.forEach((item, index) => {\n                item.classList.remove('bg-blue-100');\n                if (selectedNoteIndex === index) {\n                    item.classList.add('bg-blue-100');\n                }\n            });\n        }\n\n        function filterNotes() {\n            const input = document.getElementById('searchInput');\n            const filter = input.value.toUpperCase();\n            const ul = document.getElementById('noteList');\n            const li = ul.getElementsByTagName('li');\n\n            for (let i = 0; i < li.length; i++) {\n                let txtValue = li[i].textContent || li[i].innerText;\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                    li[i].style.display = \"\";\n                } else {\n                    li[i].style.display = \"none\";\n                }\n            }\n        }\n\n        function formatDate(date) {\n            return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}.${String(date.getMilliseconds()).padStart(3, '0')}`;\n        }\n\n        renderNotes();\n    </script>\n</body>\n\n</html>",
    "width": 1200,
    "height": 720
  },
  {
    "name": "计时器",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E8%AE%A1%E6%97%B6%E5%99%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>计时器</title>\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n  <style>\n    :root {\n      --defaultWidth: 360px;\n      --defaultHeight: 400px;\n      --uiWidth: 100%;\n      --uiHeight: 100%;\n    }\n\n    #timeDisplay {\n      font-family: 'Courier New', monospace;\n    }\n  </style>\n</head>\n\n<body class=\"bg-gray-100 flex items-center justify-center h-screen\">\n  <div id=\"timerContainer\" class=\"bg-white rounded-lg shadow-md p-4 flex flex-col items-center\"\n    style=\"width: var(--uiWidth); height: var(--uiHeight);\">\n    <h1 id=\"timerTitle\" class=\"text-2xl font-bold mb-4\">计时器</h1>\n    <div id=\"timeDisplay\" class=\"text-6xl font-bold mb-4\">\n      <span id=\"minutes\">00</span>:<span id=\"seconds\">00</span>.<span id=\"milliseconds\">00</span>\n    </div>\n    <div id=\"controls\" class=\"flex space-x-4 mb-4\">\n      <button id=\"startPauseButton\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n        <iconify-icon id=\"startPauseIcon\" icon=\"ic:round-play-arrow\"></iconify-icon>\n      </button>\n      <button id=\"resetButton\" class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\n        <iconify-icon icon=\"ic:round-replay\"></iconify-icon>\n      </button>\n      <button id=\"lapButton\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\n        <iconify-icon icon=\"ic:round-flag\"></iconify-icon>\n      </button>\n    </div>\n    <div id=\"lapRecords\" class=\"w-full p-4 overflow-y-auto bg-gray-100 flex-1 rounded-lg\">\n      <div id=\"emptyState\" class=\"flex flex-col items-center justify-center h-full\">\n        <iconify-icon icon=\"ic:baseline-info\" class=\"text-gray-400 text-4xl mb-2\"></iconify-icon>\n        <p class=\"text-gray-400\">当前没有分段记录</p>\n      </div>\n    </div>\n  </div>\n  <script>\n    const minutesDisplay = document.getElementById('minutes');\n    const secondsDisplay = document.getElementById('seconds');\n    const millisecondsDisplay = document.getElementById('milliseconds');\n    const startPauseButton = document.getElementById('startPauseButton');\n    const startPauseIcon = document.getElementById('startPauseIcon');\n    const resetButton = document.getElementById('resetButton');\n    const lapButton = document.getElementById('lapButton');\n    const lapRecordsContainer = document.getElementById('lapRecords');\n    const emptyState = document.getElementById('emptyState');\n\n    let totalMilliseconds = 0;\n    let intervalId = null;\n\n    function formatTime(time) {\n      const minutes = Math.floor(time / 60000);\n      const seconds = Math.floor((time % 60000) / 1000);\n      const milliseconds = time % 1000;\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}.${milliseconds.toString().padStart(2, '0').substring(0, 2)}`;\n    }\n\n    function toggleTimer() {\n      if (intervalId === null) {\n        startTimer();\n      } else {\n        pauseTimer();\n      }\n    }\n\n    function startTimer() {\n      intervalId = setInterval(() => {\n        totalMilliseconds += 10;\n        const formattedTime = formatTime(totalMilliseconds);\n        minutesDisplay.textContent = formattedTime.split(':')[0];\n        secondsDisplay.textContent = formattedTime.split(':')[1].split('.')[0];\n        millisecondsDisplay.textContent = formattedTime.split('.')[1];\n      }, 10);\n      startPauseIcon.setAttribute('icon', 'ic:round-pause');\n    }\n\n    function pauseTimer() {\n      clearInterval(intervalId);\n      intervalId = null;\n      startPauseIcon.setAttribute('icon', 'ic:round-play-arrow');\n    }\n\n    function resetTimer() {\n      pauseTimer();\n      totalMilliseconds = 0;\n      minutesDisplay.textContent = '00';\n      secondsDisplay.textContent = '00';\n      millisecondsDisplay.textContent = '00';\n      clearLapRecords();\n    }\n\n    function addLapRecord() {\n      const formattedTime = formatTime(totalMilliseconds);\n      const lapRecord = document.createElement('div');\n      lapRecord.className = 'lapRecord text-lg py-1 border-b';\n      lapRecord.textContent = formattedTime;\n      lapRecordsContainer.appendChild(lapRecord);\n      emptyState.style.display = 'none';\n    }\n\n    function clearLapRecords() {\n      const lapRecords = lapRecordsContainer.querySelectorAll('div.lapRecord');\n      lapRecords.forEach(record => record.remove());\n      emptyState.style.display = 'flex';\n    }\n\n    startPauseButton.addEventListener('click', toggleTimer);\n    resetButton.addEventListener('click', resetTimer);\n    lapButton.addEventListener('click', addLapRecord);\n  </script>\n</body>\n\n</html>",
    "width": 360,
    "height": 400
  },
  {
    "name": "聊天界面",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>移动端聊天界面</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 375px;\n            --uiHeight: 720px;\n        }\n\n        html,\n        body {\n            padding: 0;\n            margin: 0;\n            width: var(--uiWidth);\n            height: var(--uiHeight);\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"chat-container\" class=\"flex flex-col h-full bg-gray-100\">\n        <header id=\"chat-header\" class=\"bg-blue-600 text-white p-4 flex items-center\">\n            <iconify-icon icon=\"mdi:arrow-left\" class=\"text-2xl mr-4\"></iconify-icon>\n            <div id=\"chat-title\" class=\"flex-1\">聊天</div>\n            <iconify-icon icon=\"mdi:dots-vertical\" class=\"text-2xl\"></iconify-icon>\n        </header>\n        <main id=\"chat-content\" class=\"flex-1 p-4 overflow-auto\">\n            <div id=\"message-1\" class=\"mb-4 flex items-start\">\n                <img src=\"https://source.unsplash.com/random/50x50/?avatar\" alt=\"avatar\"\n                    class=\"w-10 h-10 rounded-full mr-3 self-start\">\n                <div>\n                    <div class=\"bg-white p-3 rounded-lg shadow-sm max-w-xs\">\n                        你好！今天的工作进展得如何？\n                    </div>\n                    <div class=\"text-xs text-gray-500 mt-1\">10:35</div>\n                </div>\n            </div>\n            <div id=\"message-2\" class=\"mb-4 flex items-start justify-end text-right\">\n                <div>\n                    <div class=\"bg-blue-500 text-white p-3 rounded-lg shadow-sm max-w-xs ml-auto\">\n                        进展顺利，谢谢你。你呢？\n                    </div>\n                    <div class=\"text-xs text-gray-500 mt-1\">10:37</div>\n                </div>\n                <img src=\"https://source.unsplash.com/random/50x50/?people\" alt=\"avatar\"\n                    class=\"w-10 h-10 rounded-full ml-3 self-start\">\n            </div>\n            <div id=\"message-3\" class=\"mb-4 flex items-start\">\n                <img src=\"https://source.unsplash.com/random/50x50/?avatar\" alt=\"avatar\"\n                    class=\"w-10 h-10 rounded-full mr-3 self-start\">\n                <div>\n                    <div class=\"bg-white p-3 rounded-lg shadow-sm max-w-xs\">\n                        我也很好，期待今天的会议。\n                    </div>\n                    <div class=\"text-xs text-gray-500 mt-1\">10:40</div>\n                </div>\n            </div>\n        </main>\n        <div id=\"chat-input\" class=\"p-4 bg-white border-t flex items-center\">\n            <input id=\"message-input\" type=\"text\" placeholder=\"输入消息...\"\n                class=\"flex-1 p-2 border rounded-lg shadow-inner\" />\n            <button id=\"send-button\"\n                class=\"ml-4 bg-blue-600 text-white p-2 rounded-lg w-10 h-10 flex items-center justify-center\">\n                <iconify-icon icon=\"mdi:send\" class=\"text-xl\"></iconify-icon>\n            </button>\n        </div>\n    </div>\n    <script type=\"module\">\n        const sendButton = document.getElementById('send-button');\n        const messageInput = document.getElementById('message-input');\n        const chatContent = document.getElementById('chat-content');\n\n        sendButton.addEventListener('click', () => {\n            const messageText = messageInput.value.trim();\n            if (messageText) {\n                const messageDiv = document.createElement('div');\n                messageDiv.className = \"mb-4 flex items-start justify-end text-right\";\n                messageDiv.innerHTML = `\n                <div>\n                    <div class=\"bg-blue-500 text-white p-3 rounded-lg shadow-sm max-w-xs ml-auto\">\n                        ${messageText}\n                    </div>\n                    <div class=\"text-xs text-gray-500 mt-1\">${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n                </div>\n                <img src=\"https://source.unsplash.com/random/50x50/?people\" alt=\"avatar\" class=\"w-10 h-10 rounded-full ml-3 self-start\">\n            `;\n                chatContent.appendChild(messageDiv);\n                chatContent.scrollTop = chatContent.scrollHeight;\n                messageInput.value = '';\n            }\n        });\n\n        messageInput.addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') {\n                sendButton.click();\n            }\n        });\n    </script>\n</body>\n\n</html>",
    "width": 375,
    "height": 720
  },
  {
    "name": "计算器",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E8%AE%A1%E7%AE%97%E5%99%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>计算器</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        #calculator-container {\n            width: 100% !important;\n            height: 100% !important;\n            margin: 0 !important;\n            max-width: none !important;\n            min-width: none !important;\n            max-height: none !important;\n            min-height: none !important;\n            position: static !important;\n        }\n    </style>\n</head>\n\n<body>\n\n    <div id=\"calculator-container\" class=\"shadow-lg rounded-lg p-6 calculator-grid grid grid-cols-4 gap-3\">\n        <div class=\"output col-span-4 bg-gray-200 rounded p-3 text-right\" style=\"height: 64px;\">\n            <div id=\"previous-operand\" class=\"text-sm opacity-50\"></div>\n            <div id=\"current-operand\" class=\"text-xl font-bold\"></div>\n        </div>\n        <button id=\"span-two\" class=\"col-span-2 button bg-gray-300 hover:bg-gray-400 text-black rounded\"\n            onclick=\"updateDisplay('AC')\">AC</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\"\n            onclick=\"updateDisplay('DEL')\">DEL</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('/')\">÷</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('1')\">1</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('2')\">2</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('3')\">3</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('*')\">×</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('4')\">4</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('5')\">5</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('6')\">6</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('-')\">-</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('7')\">7</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('8')\">8</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('9')\">9</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('+')\">+</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded col-span-2\"\n            onclick=\"updateDisplay('0')\">0</button>\n        <button class=\"button bg-gray-300 hover:bg-gray-400 text-black rounded\" onclick=\"updateDisplay('.')\">.</button>\n        <button class=\"button bg-blue-500 hover:bg-blue-600 text-white rounded col-span-1\"\n            onclick=\"compute()\">=</button>\n    </div>\n\n    <script>\n        let previousOperandTextElement = document.querySelector('#previous-operand');\n        let currentOperandTextElement = document.querySelector('#current-operand');\n        let currentOperand = '';\n        let previousOperand = '';\n        let operation = undefined;\n\n        function updateDisplay(value) {\n            if (value === 'AC') {\n                currentOperand = '';\n                previousOperand = '';\n                operation = undefined;\n                updateScreen();\n                return;\n            }\n            if (value === 'DEL') {\n                currentOperand = currentOperand.toString().slice(0, -1);\n                updateScreen();\n                return;\n            }\n            if (value === '.' && currentOperand.includes('.')) return;\n            if (['+', '-', '*', '/'].includes(value)) {\n                if (currentOperand === '') return;\n                if (previousOperand !== '') {\n                    compute();\n                }\n                operation = value;\n                previousOperand = currentOperand;\n                currentOperand = '';\n                updateScreen();\n                return;\n            }\n            currentOperand = currentOperand.toString() + value.toString();\n            updateScreen();\n        }\n\n        function compute() {\n            let computation;\n            const prev = parseFloat(previousOperand);\n            const current = parseFloat(currentOperand);\n            if (isNaN(prev) || isNaN(current)) return;\n            switch (operation) {\n                case '+':\n                    computation = prev + current;\n                    break;\n                case '-':\n                    computation = prev - current;\n                    break;\n                case '*':\n                    computation = prev * current;\n                    break;\n                case '/':\n                    computation = prev / current;\n                    break;\n                default:\n                    return;\n            }\n            currentOperand = computation;\n            operation = undefined;\n            previousOperand = '';\n            updateScreen();\n        }\n\n        function updateScreen() {\n            currentOperandTextElement.innerText = currentOperand;\n            if (operation != null) {\n                previousOperandTextElement.innerText = `${previousOperand} ${operation}`;\n            } else {\n                previousOperandTextElement.innerText = '';\n            }\n        }\n    </script>\n</body>\n\n</html>",
    "width": 300,
    "height": 400
  },
  {
    "name": "贪吃蛇游戏",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E8%B4%AA%E5%90%83%E8%9B%87%E6%B8%B8%E6%88%8F.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>贪吃蛇游戏</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n        body {\n            margin: 0;\n            height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background-color: #f7f7f7;\n        }\n\n        #game-container {\n            width: 800px;\n            height: 600px;\n            background-color: #111;\n            position: relative;\n        }\n\n        .snake-cell {\n            background-color: #21c07a;\n        }\n\n        .food-cell {\n            background-color: #e53e3e;\n        }\n\n        #toast {\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background-color: #e53e3e;\n            color: #f7f7f7;\n            padding: 10px 20px;\n            border-radius: 10px;\n            display: none;\n        }\n\n        #start-button {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%) translateY(-40px);\n        }\n\n        #instruction-text {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%) translateY(20px);\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"game-container\" style=\"width:100% !important; height:100% !important; margin:0!important; max-width:none!important; min-width:none!important; max-height:none!important; min-height:none!important; position:static!important;\">\n        <button id=\"start-button\" class=\"bg-green-500 text-white px-4 py-2 rounded\">开始游戏</button>\n        <div id=\"instruction-text\" class=\"text-white\">使用方向键来控制贪吃蛇</div>\n    </div>\n    <div id=\"toast\">游戏结束！</div>\n    <script>\n        const gameContainer = document.getElementById('game-container');\n        const startButton = document.getElementById('start-button');\n        const instructionText = document.getElementById('instruction-text');\n        const gameWidth = 800;\n        const gameHeight = 600;\n        const cellSize = 20;\n        const gameRows = gameHeight / cellSize;\n        const gameCols = gameWidth / cellSize;\n        let snake = [{ x: 8, y: 8 }];\n        let food = { x: Math.floor(Math.random() * gameCols), y: Math.floor(Math.random() * gameRows) };\n        let direction = { x: 0, y: 0 };\n        let newDirection = { x: 0, y: 0 };\n        let speed = 10;\n        let lastRenderTime = 0;\n        let gameOver = false;\n        const toast = document.getElementById('toast');\n\n        function main(currentTime) {\n            if (gameOver) {\n                toast.style.display = 'block';\n                setTimeout(() => {\n                    toast.style.display = 'none';\n                    window.location.reload();\n                }, 2000);\n                return;\n            }\n\n            window.requestAnimationFrame(main);\n            const secondsSinceLastRender = (currentTime - lastRenderTime) / 1000;\n            if (secondsSinceLastRender < 1 / speed) return;\n\n            lastRenderTime = currentTime;\n\n            updateGame();\n            drawGame();\n        }\n\n        function updateGame() {\n            const head = { x: snake[0].x + newDirection.x, y: snake[0].y + newDirection.y };\n            snake.unshift(head);\n\n            if (head.x === food.x && head.y === food.y) {\n                placeFood();\n            } else {\n                snake.pop();\n            }\n\n            if (head.x < 0 || head.x >= gameCols || head.y < 0 || head.y >= gameRows || snakeIntersection()) {\n                gameOver = true;\n            }\n\n            direction = { ...newDirection };\n        }\n\n        function drawGame() {\n            gameContainer.innerHTML = '';\n            snake.forEach(segment => {\n                const snakeElement = document.createElement('div');\n                snakeElement.style.gridRowStart = segment.y + 1;\n                snakeElement.style.gridColumnStart = segment.x + 1;\n                snakeElement.classList.add('snake-cell');\n                gameContainer.appendChild(snakeElement);\n            });\n\n            const foodElement = document.createElement('div');\n            foodElement.style.gridRowStart = food.y + 1;\n            foodElement.style.gridColumnStart = food.x + 1;\n            foodElement.classList.add('food-cell');\n            gameContainer.appendChild(foodElement);\n        }\n\n        function placeFood() {\n            food = {\n                x: Math.floor(Math.random() * gameCols),\n                y: Math.floor(Math.random() * gameRows)\n            };\n\n            snake.forEach(segment => {\n                if (segment.x === food.x && segment.y === food.y) {\n                    placeFood();\n                }\n            });\n        }\n\n        function snakeIntersection() {\n            return snake.slice(1).some(segment => segment.x === snake[0].x && segment.y === snake[0].y);\n        }\n\n        window.addEventListener('keydown', e => {\n            switch (e.key) {\n                case 'ArrowUp':\n                    if (direction.y !== 1) newDirection = { x: 0, y: -1 };\n                    break;\n                case 'ArrowDown':\n                    if (direction.y !== -1) newDirection = { x: 0, y: 1 };\n                    break;\n                case 'ArrowLeft':\n                    if (direction.x !== 1) newDirection = { x: -1, y: 0 };\n                    break;\n                case 'ArrowRight':\n                    if (direction.x !== -1) newDirection = { x: 1, y: 0 };\n                    break;\n            }\n        });\n\n        startButton.onclick = () => {\n            startButton.style.display = 'none';\n            instructionText.style.display = 'none';\n            gameContainer.style.display = 'grid';\n            gameContainer.style.gridTemplateRows = `repeat(${gameRows}, 1fr)`;\n            gameContainer.style.gridTemplateColumns = `repeat(${gameCols}, 1fr)`;\n\n            placeFood();\n\n            newDirection = { x: 1, y: 0 };\n\n            window.requestAnimationFrame(main);\n        };\n    </script>\n</body>\n\n</html>",
    "width": 800,
    "height": 600
  },
  {
    "name": "音乐播放器",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>清新音乐播放器</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        :root {\n            --uiWidth: 400px;\n            --uiHeight: 400px;\n        }\n\n        #player-container {\n            position: relative;\n            background-color: rgba(255, 255, 255, 0.65);\n            backdrop-filter: blur(30px);\n        }\n\n        #player-background {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background-size: cover;\n            background-position: center;\n            z-index: -1;\n        }\n    </style>\n</head>\n\n<body class=\"flex items-center justify-center h-screen\">\n    <div id=\"player-container\" class=\"w-full h-full text-gray-800 rounded-3xl p-6 relative overflow-hidden\"\n        style=\"max-width: var(--uiWidth); max-height: var(--uiHeight);\">\n        <div id=\"player-header\" class=\"flex flex-col items-center mb-6 relative z-10\">\n            <div id=\"album-cover\" class=\"mb-4 rounded-xl overflow-hidden shadow-md\">\n                <img id=\"current-cover\"\n                    src=\"https://cdn1.suno.ai/image_768adf51-ba69-44c7-9c6a-a488babb73e7.png\"\n                    alt=\"Album Cover\" class=\"w-40 h-40 object-cover\">\n            </div>\n            <div id=\"player-info\" class=\"text-center\">\n                <p id=\"current-title\" class=\"text-lg font-bold text-gray-900\">Shadows of the Holler</p>\n                <p id=\"current-time\" class=\"text-sm text-gray-500\">00:00 / 00:00</p>\n            </div>\n        </div>\n        <div id=\"player-controls\" class=\"flex items-center justify-center mb-4 space-x-6 text-gray-600 relative z-10\">\n            <button id=\"prev-btn\" class=\"focus:outline-none\">\n                <iconify-icon icon=\"ic:baseline-skip-previous\" width=\"32\" height=\"32\"\n                    class=\"hover:text-gray-900\"></iconify-icon>\n            </button>\n            <button id=\"play-btn\" class=\"focus:outline-none\">\n                <iconify-icon icon=\"ic:baseline-play-circle-outline\" width=\"48\" height=\"48\"\n                    class=\"hover:text-gray-900\"></iconify-icon>\n            </button>\n            <button id=\"next-btn\" class=\"focus:outline-none\">\n                <iconify-icon icon=\"ic:baseline-skip-next\" width=\"32\" height=\"32\"\n                    class=\"hover:text-gray-900\"></iconify-icon>\n            </button>\n        </div>\n        <div id=\"player-progress\" class=\"relative w-full bg-white rounded-full h-2.5 mb-4 relative z-10\">\n            <div id=\"progress-bar\" class=\"bg-blue-600 h-2.5 rounded-full\" style=\"width: 0;\"></div>\n        </div>\n        <audio id=\"audio\" src=\"https://cdn1.suno.ai/6a6bdd56-d583-4e0a-9869-b98a8c72a37b.mp3\" preload=\"auto\"></audio>\n    </div>\n    <div id=\"player-background\" class=\"w-full h-full text-gray-800 rounded-3xl p-6 relative overflow-hidden\"\n        style=\"background-image: url('https://cdn1.suno.ai/image_768adf51-ba69-44c7-9c6a-a488babb73e7.png'); max-width: var(--uiWidth); max-height: var(--uiHeight);\">\n    </div>\n    <script type=\"text/javascript\">\n        const audio = document.getElementById('audio');\n        const playBtn = document.getElementById('play-btn');\n        const prevBtn = document.getElementById('prev-btn');\n        const nextBtn = document.getElementById('next-btn');\n        const progressBar = document.getElementById('progress-bar');\n        const currentTitle = document.getElementById('current-title');\n        const currentTime = document.getElementById('current-time');\n        const currentCover = document.getElementById('current-cover');\n        const playerBackground = document.getElementById('player-background');\n\n        let isPlaying = false;\n        let currentTrackIndex = 0;\n        const trackList = [\n            {\n                src: \"https://cdn1.suno.ai/6a6bdd56-d583-4e0a-9869-b98a8c72a37b.mp3\",\n                title: \"Shadows of the Holler\",\n                cover: \"https://cdn1.suno.ai/image_768adf51-ba69-44c7-9c6a-a488babb73e7.png\"\n            },\n            {\n                src: \"https://cdn1.suno.ai/a5e2198a-f352-4abb-9a24-7f81b143ded3.mp3\",\n                title: \"Stone\",\n                cover: \"https://cdn1.suno.ai/image_93dab67e-956e-410a-8f7a-487f265a5f5f.png\"\n            },\n            {\n                src: \"https://cdn1.suno.ai/19807561-1427-4c25-a229-a8c3063d0616.mp3\",\n                title: \"Egyptian Dance Party\",\n                cover: \"https://cdn1.suno.ai/image_fd9931b6-154b-4863-9e02-c3c7b19f4d08.png\"\n            }\n        ];\n\n        playBtn.addEventListener('click', () => {\n            if (isPlaying) {\n                audio.pause();\n                playBtn.firstElementChild.setAttribute(\"icon\", \"ic:baseline-play-circle-outline\");\n            } else {\n                audio.play();\n                playBtn.firstElementChild.setAttribute(\"icon\", \"ic:baseline-pause-circle-outline\");\n            }\n            isPlaying = !isPlaying;\n        });\n\n        prevBtn.addEventListener('click', () => {\n            currentTrackIndex = (currentTrackIndex - 1 + trackList.length) % trackList.length;\n            loadTrack(currentTrackIndex);\n            audio.play();\n            isPlaying = true;\n            playBtn.firstElementChild.setAttribute(\"icon\", \"ic:baseline-pause-circle-outline\");\n        });\n\n        nextBtn.addEventListener('click', () => {\n            currentTrackIndex = (currentTrackIndex + 1) % trackList.length;\n            loadTrack(currentTrackIndex);\n            const playPromise = audio.play();\n            if (playPromise !== undefined) {\n                playPromise.then(() => { }).catch(error => {\n                    console.error(error);\n                });\n            }\n            isPlaying = true;\n            playBtn.firstElementChild.setAttribute(\"icon\", \"ic:baseline-pause-circle-outline\");\n        });\n\n        audio.addEventListener('timeupdate', () => {\n            const current = audio.currentTime;\n            const duration = audio.duration;\n            progressBar.style.width = (current / duration) * 100 + '%';\n            currentTime.textContent = `${formatTime(current)} / ${formatTime(duration)}`;\n        });\n\n        function loadTrack(index) {\n            const track = trackList[index];\n            audio.src = track.src;\n            currentTitle.textContent = `${track.title}`;\n            currentCover.src = track.cover;\n            playerBackground.style.backgroundImage = `url('${track.cover}')`;\n            audio.load();\n        }\n\n        function formatTime(time) {\n            const minutes = Math.floor(time / 60);\n            const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n            return `${minutes}:${seconds}`;\n        }\n\n        loadTrack(currentTrackIndex);\n    </script>\n</body>\n\n</html>",
    "width": 400,
    "height": 400
  },
  {
    "name": "高级日历组件",
    "imgUrl": "https://cdn.modao.cc/AI%E7%BB%84%E4%BB%B6%E7%94%9F%E6%88%90/%E5%B8%A6%E5%A4%87%E5%BF%98%E5%BD%95%E7%9A%84%E6%97%A5%E5%8E%86%E7%BB%84%E4%BB%B6.png",
    "html": "<!DOCTYPE html>\n<html lang=\"zh-cn\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>带备忘录的日历组件</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://code.iconify.design/iconify-icon/2.0.0/iconify-icon.min.js\"></script>\n    <style>\n        body {\n            font-family: 'Open Sans', sans-serif;\n        }\n\n        .calendar {\n            width: 100% !important;\n            height: 100% !important;\n            margin: 0 !important;\n            max-width: none !important;\n            min-width: none !important;\n            max-height: none !important;\n            min-height: none !important;\n            position: static !important;\n        }\n\n        .memo-date {\n            background-color: #f3f4f6;\n            border-radius: 0.5rem;\n            padding: 0.5rem;\n            margin: 0.25rem;\n            transition: transform 0.2s;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        .memo-date.active {\n            background-color: #fef3c7;\n            color: #78350f;\n        }\n\n        .memo-date.selected {\n            transform: scale(1.05);\n            outline: 2px solid #4f46e5;\n        }\n\n        .memo-input {\n            width: 100%;\n            display: block;\n        }\n\n        .submit-btn {\n            display: block;\n            width: 100%;\n            padding: 0.5rem;\n            margin-top: 0.5rem;\n            background-color: #4f46e5;\n            color: white;\n            border: none;\n            border-radius: 0.5rem;\n            cursor: pointer;\n        }\n\n        .submit-btn:hover {\n            background-color: #3730a3;\n        }\n\n        .week-day {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n    </style>\n    <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body>\n\n    <div id=\"calendarApp\" class=\"calendar p-5 bg-white rounded-lg shadow-lg\">\n        <div id=\"calendarHeader\" class=\"flex justify-between items-center mb-5\">\n            <iconify-icon icon=\"akar-icons:chevron-left\" class=\"cursor-pointer\"\n                onclick=\"changeMonth(-1)\"></iconify-icon>\n            <h2 id=\"calendarTitle\" class=\"text-xl font-bold\"></h2>\n            <iconify-icon icon=\"akar-icons:chevron-right\" class=\"cursor-pointer\"\n                onclick=\"changeMonth(1)\"></iconify-icon>\n        </div>\n        <div id=\"weekDays\" class=\"grid grid-cols-7 gap-2\">\n            <div class=\"week-day\">周日</div>\n            <div class=\"week-day\">周一</div>\n            <div class=\"week-day\">周二</div>\n            <div class=\"week-day\">周三</div>\n            <div class=\"week-day\">周四</div>\n            <div class=\"week-day\">周五</div>\n            <div class=\"week-day\">周六</div>\n        </div>\n        <div id=\"calendarDays\" class=\"grid grid-cols-7 gap-2 my-5\"></div>\n        <textarea id=\"memoInput\" class=\"memo-input p-2 border rounded-lg resize-none\" rows=\"5\"\n            placeholder=\"请输入备忘录内容...\"></textarea>\n        <button id=\"submitMemo\" class=\"submit-btn\">提交</button>\n    </div>\n\n    <script>\n        const calendarApp = document.getElementById('calendarApp');\n        const calendarTitle = document.getElementById('calendarTitle');\n        const calendarDays = document.getElementById('calendarDays');\n        const memoInput = document.getElementById('memoInput');\n        const submitMemo = document.getElementById('submitMemo');\n        let currentSelectedDate = null;\n        const weekDays = ['日', '一', '二', '三', '四', '五', '六'];\n        let memos = {};\n        let currentDate = new Date();\n\n        function renderCalendar() {\n            const year = currentDate.getFullYear();\n            const month = currentDate.getMonth();\n            const firstDay = new Date(year, month, 1);\n            const lastDay = new Date(year, month + 1, 0);\n            calendarTitle.innerText = `${year}年${month + 1}月`;\n            calendarDays.innerHTML = '';\n\n            for (let i = 0; i < firstDay.getDay(); i++) {\n                calendarDays.innerHTML += '<div></div>';\n            }\n\n            for (let i = 1; i <= lastDay.getDate(); i++) {\n                const date = new Date(year, month, i);\n                const dateKey = date.toISOString().split('T')[0];\n                const memoDate = document.createElement('div');\n                memoDate.className = 'memo-date cursor-pointer';\n                memoDate.innerText = i;\n                if (memos[dateKey]) {\n                    memoDate.classList.add('active');\n                }\n                if ((i === currentDate.getDate() && month === currentDate.getMonth() && !currentSelectedDate) || (currentSelectedDate && dateKey === currentSelectedDate)) {\n                    memoDate.classList.add('selected');\n                    selectDate(date, memoDate, false);\n                }\n                memoDate.onclick = () => selectDate(date, memoDate, true);\n                calendarDays.appendChild(memoDate);\n            }\n        }\n\n        function selectDate(date, element, focus) {\n            document.querySelectorAll('.memo-date').forEach(el => el.classList.remove('selected'));\n            element.classList.add('selected');\n            const dateKey = date.toISOString().split('T')[0];\n            memoInput.value = memos[dateKey] || '';\n            currentSelectedDate = dateKey;\n            if (focus) {\n                memoInput.focus();\n            }\n            submitMemo.onclick = () => {\n                memos[dateKey] = memoInput.value;\n                renderCalendar();\n            };\n        }\n\n        function changeMonth(change) {\n            currentDate.setMonth(currentDate.getMonth() + change);\n            renderCalendar();\n        }\n\n        renderCalendar();\n    </script>\n\n</body>\n\n</html>",
    "width": 480,
    "height": 720
  }
]